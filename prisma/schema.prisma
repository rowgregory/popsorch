// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(cuid())
  firstName           String   @db.VarChar(255)
  lastName            String   @db.VarChar(255)
  password            String   @db.VarChar(255)
  email               String   @unique @db.VarChar(255)
  isAdmin             Boolean  @default(false)
  isSuperUser         Boolean  @default(false)
  isSupporter         Boolean  @default(false)
  role                String   @db.VarChar(255)
  isSoundEffectsOn    Boolean  @default(true)
  isBackgroundMusicOn Boolean  @default(false)
  securityQuestion    String   @db.VarChar(255)
  securityAnswerHash  String   @db.VarChar(255)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Log {
  id        String   @id @default(cuid())
  level     String // e.g., 'info', 'error', 'debug'
  message   String
  metadata  Json? // Optional, store additional context
  createdAt DateTime @default(now())
}

model ComponentInteraction {
  id            String   @id @default(uuid())
  componentName String   @unique
  clickCount    Int      @default(0)
  lastClickedAt DateTime @updatedAt
}

model Lunch {
  id            String   @id @default(uuid())
  name          String   @db.VarChar(100)
  patronCount   String
  patrons       Json
  patronsTotal  String
  lunchTime     String   @db.VarChar(150)
  lunchLocation String   @db.VarChar(250)
  isFilled      Boolean  @default(false)
  host          String   @db.VarChar(50)
  description   String   @db.VarChar(250)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model TextBlock {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  type      String
  mimeType  String   @default("")
  fileName  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamMember {
  id            String   @id @default(cuid())
  firstName     String
  lastName      String
  position      String
  bio           String
  role          String
  imageUrl      String
  imageFilename String   @db.VarChar(255)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model PhotoGalleryImage {
  id            String   @id @default(cuid())
  imageUrl      String
  imageFilename String   @db.VarChar(255)
  isHomeHero    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Testimonial {
  id        String   @id @default(cuid())
  name      String
  review    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Concert {
  id                    String   @id @default(cuid())
  name                  String
  pressRelease          String   @default("")
  description           String
  eventDetails          Json
  imageUrl              String
  imageFilename         String
  isOnSale              Boolean  @default(false)
  type                  String   @default("")
  allSeriesExternalLink String   @default("")
  cardDate              String   @default("")
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model Venue {
  id                   String   @id @default(cuid())
  name                 String
  capacity             String
  accessibility        String
  immersiveEnvironment String
  parking              String
  imageUrl             String
  imageFilename        String
  address              String   @default("")
  longitude            String   @default("")
  latitude             String   @default("")
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Newsletter {
  id                       String   @id @default(cuid())
  firstName                String   @db.VarChar(255)
  lastName                 String   @db.VarChar(255)
  email                    String   @unique @db.VarChar(255)
  isOption1                Boolean  @default(false)
  isOption2                Boolean  @default(false)
  isOption3                Boolean  @default(false)
  isOption4                Boolean  @default(false)
  agreedToPrivacyStatement Boolean  @default(false)
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model Question {
  id           String   @id @default(cuid())
  name         String   @db.VarChar(255)
  email        String   @db.VarChar(255)
  message      String   @db.VarChar(500)
  hasResponded Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model CampApplication {
  id                 String   @id @default(cuid())
  student            Student?
  address            Address?
  parent             Parent?
  consent            Boolean  @default(false)
  instrument         String   @default("") @db.VarChar(255)
  musicTeacher       String?  @db.VarChar(255)
  strings            String?  @db.VarChar(255)
  brassAndPercussion String?  @db.VarChar(255)
  woodwinds          String?  @db.VarChar(255)
  referralSource     String?  @db.VarChar(255)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Student {
  id                  String           @id @default(cuid())
  firstName           String           @db.VarChar(255)
  lastName            String           @db.VarChar(255)
  grade               String           @db.VarChar(255)
  school              String           @db.VarChar(255)
  studentEmailAddress String           @db.VarChar(255)
  studentPhoneNumber  String           @db.VarChar(255)
  campApplication     CampApplication? @relation(fields: [campApplicationId], references: [id])
  campApplicationId   String?          @unique
}

model Address {
  id                String           @id @default(cuid())
  addressLine1      String?          @db.VarChar(255)
  addressLine2      String?          @db.VarChar(255)
  city              String?          @db.VarChar(255)
  state             String?          @db.VarChar(255)
  zipPostalCode     String?          @db.VarChar(255)
  campApplication   CampApplication? @relation(fields: [campApplicationId], references: [id])
  campApplicationId String?          @unique
}

model Parent {
  id                    String           @id @default(cuid())
  firstName             String           @db.VarChar(255)
  lastName              String           @db.VarChar(255)
  relationshipToStudent String?          @db.VarChar(255)
  parentEmailAddress    String           @db.VarChar(255)
  parentPhoneNumber     String           @db.VarChar(255)
  campApplication       CampApplication? @relation(fields: [campApplicationId], references: [id])
  campApplicationId     String?          @unique
}

model AppMetric {
  id           String   @id @default(cuid())
  desktopCount Int      @default(0)
  mobileCount  Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model DailyMetric {
  id           String   @id @default(cuid())
  date         DateTime @default(now()) @db.Date
  desktopCount Int      @default(0)
  mobileCount  Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([date])
}

model Changelog {
  id          String   @id @default(cuid())
  version     String
  title       String
  description String   @db.Text
  releasedAt  DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SeasonPackageBanner {
  id        String   @id @default(cuid())
  isVisible Boolean  @default(true)
  isLive    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FeatureToggleCard {
  id        String   @id @default(cuid())
  isVisible Boolean  @default(true)
  isLive    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HeaderButton {
  id              String   @id @default(cuid())
  animation       String   @default("scale")
  backgroundColor String
  fontColor       String
  text            String   @default("Get Started")
  linkType        String   @default("internal")
  link            String
  isActive        Boolean  @default(false)
  type            String   @default("button")
  dropdownItems   Json?    @default("[]")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PushSubscription {
  id        String   @id @default(cuid())
  userId    String // Link to admin user
  endpoint  String   @unique
  p256dh    String
  auth      String
  userAgent String? // Optional: track device/browser
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sponsor {
  id           String   @id @default(cuid())
  filePath     String
  filename     String
  externalLink String
  level        String
  color        String
  description  String
  amount       String
  clicks       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
